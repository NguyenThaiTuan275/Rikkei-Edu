// ·ª®ng d·ª•ng t√≠nh to√°n h√¨nh h·ªçc ph·∫≥ng
class GeometryCalculator {
    // T√≠nh di·ªán t√≠ch h√¨nh tr√≤n.
    circleArea(radius: number): number {
        return Math.PI * radius * radius;
    }

    // T√≠nh chu vi h√¨nh tr√≤n.
    circlePerimeter(radius: number): number {
        return 2 * Math.PI * radius;
    }

    // T√≠nh di·ªán t√≠ch h√¨nh tam gi√°c.
    triangleArea(base: number, height: number): number {
        return 0.5 * base * height;
    }

    // T√≠nh chu vi tam gi√°c.
    trianglePerimeter(a: number, b: number, c: number): number {
        return a + b + c
    }

    // T√≠nh di·ªán t√≠ch h√¨nh ch·ªØ nh·∫≠t.
    rectangleArea(width: number, height: number): number {
        return width * height;
    }

    // T√≠nh chu vi h√¨nh ch·ªØ nh·∫≠t.
    rectanglePerimeter(width: number, height: number): number{
        return 2 * (width + height);
    }

    // T√≠nh di·ªán t√≠ch h√¨nh b√¨nh h√†nh.
    parallelogramArea(base: number, height: number): number{
        return base * height;
    }

    // T√≠nh chu vi h√¨nh b√¨nh h√†nh.
    parallelogramPerimeter(a: number, b: number): number {
        return 2 * (a + b);
    }

    // T√≠nh di·ªán t√≠ch h√¨nh thoi.
    rhombusArea(d1: number, d2: number): number {
        return 0.5 * d1 * d2;
    }

    // T√≠nh chu vi h√¨nh thoi.
    rhombusPerimeter(side: number): number {
        return 4 * side;
    }
}

class Main2 {
    static geometryCalculator: GeometryCalculator = new GeometryCalculator();

    static start(): void {
        let running = true;

        while (running) {
            let choice = prompt(
                "Ch·ªçn ch·ª©c nƒÉng:\n" +
                "1. T√≠nh di·ªán t√≠ch v√† chu vi h√¨nh tr√≤n\n" +
                "2. T√≠nh di·ªán t√≠ch v√† chu vi h√¨nh tam gi√°c\n" +
                "3. T√≠nh di·ªán t√≠ch v√† chu vi h√¨nh ch·ªØ nh·∫≠t\n" +
                "4. T√≠nh di·ªán t√≠ch v√† chu vi h√¨nh b√¨nh h√†nh\n" +
                "5. T√≠nh di·ªán t√≠ch v√† chu vi h√¨nh thoi\n" +
                "6. D·ª´ng ch∆∞∆°ng tr√¨nh\n"
            );
            switch (choice) {
                case "1": {
                    let radius = Number(prompt("Nh·∫≠p b√°n k√≠nh h√¨nh tr√≤n:"));
                    console.log(`Di·ªán t√≠ch h√¨nh tr√≤n c√≥ b√°n k√≠nh = ${radius} l√†: ${this.geometryCalculator.circleArea(radius)}`);
                    console.log(`Chu vi h√¨nh tr√≤n c√≥ b√°n k√≠nh = ${radius} l√†: ${this.geometryCalculator.circlePerimeter(radius)}`);
                    break;
                }
                case "2": {
                    let base = Number(prompt("Nh·∫≠p ƒë√°y h√¨nh tam gi√°c:"));
                    let height = Number(prompt("Nh·∫≠p chi·ªÅu cao h√¨nh tam gi√°c:"));
                    console.log(`Di·ªán t√≠ch h√¨nh tam gi√°c c√≥ ƒë√°y = ${base} v√† chi·ªÅu cao = ${height} l√†: ${this.geometryCalculator.triangleArea(base, height)}`);
                    let a = Number(prompt("Nh·∫≠p c·∫°nh th·ª© nh·∫•t c·ªßa tam gi√°c:"));
                    let b = Number(prompt("Nh·∫≠p c·∫°nh th·ª© hai c·ªßa tam gi√°c:"));
                    let c = Number(prompt("Nh·∫≠p c·∫°nh th·ª© ba c·ªßa tam gi√°c:"));
                    console.log(`Chu vi h√¨nh tam gi√°c c√≥ 3 c·∫°nh = ${a}, ${b}, ${c} l√†: ${this.geometryCalculator.trianglePerimeter(a, b, c)}`);
                    break;
                }
                case "3": {
                    let width = Number(prompt("Nh·∫≠p chi·ªÅu r·ªông h√¨nh ch·ªØ nh·∫≠t:"));
                    let height = Number(prompt("Nh·∫≠p chi·ªÅu cao h√¨nh ch·ªØ nh·∫≠t:"));
                    console.log(`Di·ªán t√≠ch h√¨nh ch·ªØ nh·∫≠t c√≥ chi·ªÅu r·ªông = ${width} v√† chi·ªÅu d√†i = ${height} l√†: ${this.geometryCalculator.rectangleArea(width, height)}`);
                    console.log(`Chu vi h√¨nh ch·ªØ nh·∫≠t c√≥ chi·ªÅu r·ªông = ${width} v√† chi·ªÅu d√†i = ${height} l√†: ${this.geometryCalculator.rectanglePerimeter(width, height)}`);
                    break;
                }
                case "4": {
                    let base = Number(prompt("Nh·∫≠p ƒë√°y h√¨nh b√¨nh h√†nh:"));
                    let height = Number(prompt("Nh·∫≠p chi·ªÅu cao h√¨nh b√¨nh h√†nh:"));
                    console.log(`Di·ªán t√≠ch h√¨nh b√¨nh h√†nh c√≥ ƒë√°y = ${base} v√† chi·ªÅu cao = ${height} l√†: ${this.geometryCalculator.parallelogramArea(base, height)}`);
                    let a = Number(prompt("Nh·∫≠p c·∫°nh th·ª© nh·∫•t c·ªßa h√¨nh b√¨nh h√†nh:"));
                    let b = Number(prompt("Nh·∫≠p c·∫°nh th·ª© hai c·ªßa h√¨nh b√¨nh h√†nh:"));
                    console.log(`Chu vi h√¨nh b√¨nh h√†nh c√≥ 2 c·∫°nh = ${a}, ${b} l√†: ${this.geometryCalculator.parallelogramPerimeter(a, b)}`);
                    break;
                }
                case "5": {
                    let d1 = Number(prompt("Nh·∫≠p ƒë∆∞·ªùng ch√©o th·ª© nh·∫•t c·ªßa h√¨nh thoi:"));
                    let d2 = Number(prompt("Nh·∫≠p ƒë∆∞·ªùng ch√©o th·ª© hai c·ªßa h√¨nh thoi:"));
                    console.log(`Di·ªán t√≠ch h√¨nh thoi c√≥ ƒë∆∞·ªùng ch√©o th·ª© nh·∫•t = ${d1} v√† ƒë∆∞·ªùng ch√©o th·ª© 2 = ${d2} l√†: ${this.geometryCalculator.rhombusArea(d1, d2)}`);
                    let side = Number(prompt("Nh·∫≠p c·∫°nh h√¨nh thoi:"));
                    console.log(`Chu vi h√¨nh thoi c√≥ c·∫°nh = ${side} l√†: ${this.geometryCalculator.rhombusPerimeter(side)}`);
                    break;
                }
                case "6": {
                    running = false;
                    console.log("üö™ ƒê√£ tho√°t ch∆∞∆°ng tr√¨nh.");
                    break;
                }
                default: {
                    console.log("‚ö†Ô∏è L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá. Vui l√≤ng th·ª≠ l·∫°i.");
                }
            }
        }
    }
}

Main2.start();
"use strict";
// ·ª®ng d·ª•ng qu·∫£n l√Ω th∆∞ vi·ªán s√°ch
class Book {
    constructor(id, title, author, year) {
        this.id = id;
        this.title = title;
        this.author = author;
        this.year = year;
    }
}
class LibraryManager {
    constructor() {
        this.books = [];
    }
    addBook(title, author, year) {
        let id = this.books.length > 0 ? this.books[this.books.length - 1].id + 1 : 1;
        let newBook = new Book(id, title, author, year);
        this.books.push(newBook);
        console.log("üìö S√°ch ƒë√£ ƒë∆∞·ª£c th√™m v√†o th∆∞ vi·ªán.");
    }
    listBooks() {
        if (this.books.length === 0) {
            console.log("‚ö†Ô∏è Th∆∞ vi·ªán ch∆∞a c√≥ s√°ch n√†o.");
        }
        else {
            console.log("üìö Danh s√°ch s√°ch trong th∆∞ vi·ªán:");
            this.books.forEach(book => {
                console.log(`${book.id}. T√™n s√°ch: ${book.title}, T√°c gi·∫£: ${book.author}, NƒÉm xu·∫•t b·∫£n: ${book.year}`);
            });
        }
    }
    removeBook(id) {
        const index = this.books.findIndex(book => book.id === id);
        if (index !== -1) {
            this.books.splice(index, 1);
            console.log("üìö S√°ch ƒë√£ ƒë∆∞·ª£c x√≥a kh·ªèi th∆∞ vi·ªán.");
        }
        else {
            console.log("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y s√°ch v·ªõi m√£ n√†y.");
        }
    }
    searchBook(title) {
        const foundBooks = this.books.filter(book => book.title.toLowerCase().includes(title.toLowerCase()));
        if (foundBooks.length > 0) {
            console.log("üìö K·∫øt qu·∫£ t√¨m ki·∫øm:");
            foundBooks.forEach(book => {
                console.log(`${book.id}. T√™n s√°ch: ${book.title}, T√°c gi·∫£: ${book.author}, NƒÉm xu·∫•t b·∫£n: ${book.year}`);
            });
        }
        else {
            console.log("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y s√°ch n√†o v·ªõi t√™n n√†y.");
        }
    }
}
class Main3 {
    static start() {
        let running = true;
        while (running) {
            let choice = prompt("Ch·ªçn ch·ª©c nƒÉng:\n" +
                "1. Th√™m s√°ch v√†o th∆∞ vi·ªán\n" +
                "2. Hi·ªÉn th·ªã danh s√°ch s√°ch\n" +
                "3. X√≥a s√°ch theo m√£ s√°ch\n" +
                "4. T√¨m ki·∫øm s√°ch theo t√™n\n" +
                "5. D·ª´ng ch∆∞∆°ng tr√¨nh\n");
            switch (choice) {
                case "1": {
                    let title = prompt("Nh·∫≠p t√™n s√°ch:");
                    let author = prompt("Nh·∫≠p t√™n t√°c gi·∫£:");
                    let year = Number(prompt("Nh·∫≠p nƒÉm xu·∫•t b·∫£n:"));
                    if (title && author && !isNaN(year)) {
                        this.libraryManager.addBook(title, author, year);
                    }
                    else {
                        console.log("‚ö†Ô∏è Th√¥ng tin s√°ch kh√¥ng h·ª£p l·ªá.");
                    }
                    break;
                }
                case "2": {
                    this.libraryManager.listBooks();
                    break;
                }
                case "3": {
                    let id = Number(prompt("Nh·∫≠p m√£ s√°ch c·∫ßn x√≥a:"));
                    if (!isNaN(id)) {
                        this.libraryManager.removeBook(id);
                    }
                    else {
                        console.log("‚ö†Ô∏è M√£ s√°ch kh√¥ng h·ª£p l·ªá.");
                    }
                    break;
                }
                case "4": {
                    let title = prompt("Nh·∫≠p t√™n s√°ch c·∫ßn t√¨m:");
                    if (title) {
                        this.libraryManager.searchBook(title);
                    }
                    else {
                        console.log("‚ö†Ô∏è T√™n s√°ch kh√¥ng h·ª£p l·ªá.");
                    }
                    break;
                }
                case "5": {
                    running = false;
                    console.log("üö™ ƒê√£ tho√°t ch∆∞∆°ng tr√¨nh.");
                    break;
                }
                default: {
                    console.log("‚ö†Ô∏è L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá. Vui l√≤ng th·ª≠ l·∫°i.");
                }
            }
        }
    }
}
Main3.libraryManager = new LibraryManager();
Main3.start();
